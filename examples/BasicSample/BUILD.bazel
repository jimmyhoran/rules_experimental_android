load(
    "@rules_experimental_android//:defs.bzl",
    "marathon_android_test",
)

licenses(["notice"])  # Apache 2.0

minSdkVersion = "24"
targetSdkVersion = "30"

android_library(
    name = "BasicSampleLib",
    srcs = glob(["app/src/main/**/*.java"]),
    custom_package = "com.example.android.testing.espresso.BasicSample",
    manifest = "app/src/main/AndroidManifest.xml",
    resource_files = glob(["app/src/main/res/**/*"]),
    deps = [
        "@maven//:com_google_guava_guava"
    ],
)

android_binary(
    name = "BasicSample",
    custom_package = "com.example.android.testing.espresso.BasicSample",
    manifest = "app/src/main/AppManifest.xml",
    manifest_values = {
        "minSdkVersion": minSdkVersion,
        "targetSdkVersion": targetSdkVersion,
    },
    deps = [":BasicSampleLib"],
)

android_library(
    name = "BasicSampleTestLib",
    srcs = glob(["app/src/androidTest/**/*.java"]),
    custom_package = "com.example.android.testing.espresso.BasicSample.test",
    deps = [
        ":BasicSampleLib",
        "@maven//:androidx_annotation_annotation",
        "@maven//:androidx_test_core",
        "@maven//:androidx_test_espresso_espresso_core",
        "@maven//:androidx_test_ext_junit",
        "@maven//:androidx_test_runner",
        "@maven//:junit_junit",
        "@maven//:org_hamcrest_java_hamcrest",
    ],
)

android_binary(
    name = "BasicSampleTest",
    custom_package = "com.example.android.testing.espresso.BasicSample.test",
    instruments = ":BasicSample",
    manifest = "app/src/androidTest/AndroidManifest.xml",
    manifest_values = {
        "minSdkVersion": minSdkVersion,
        "targetSdkVersion": targetSdkVersion,
    },
    deps = [":BasicSampleTestLib"],
)

DEVICE_TYPES = ["pixel"]
API_LEVELS = [26]

marathon_android_test(
    name = "BasicSampleMarathonTest",
    test_app = ":BasicSampleTest",
)

# [
#     [
#         composer_instrumentation_test(
#             name = "BasicSampleComposerTest_%s_%s" % (DEVICE_TYPE, API_LEVEL),
#             test_apk = ":BasicSampleTest",
#             api_level = API_LEVEL,
#             device_type = DEVICE_TYPE,
#             google_apis = True,
#         ) for DEVICE_TYPE in DEVICE_TYPES
#     ]
#     for API_LEVEL in API_LEVELS
# ]
